@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
    --color-background: var(--background);
    --color-foreground: var(--foreground);
    --font-sans: var(--font-geist-sans);
    --font-mono: var(--font-geist-mono);
    --color-sidebar-ring: var(--sidebar-ring);
    --color-sidebar-border: var(--sidebar-border);
    --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
    --color-sidebar-accent: var(--sidebar-accent);
    --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
    --color-sidebar-primary: var(--sidebar-primary);
    --color-sidebar-foreground: var(--sidebar-foreground);
    --color-sidebar: var(--sidebar);
    --color-chart-5: var(--chart-5);
    --color-chart-4: var(--chart-4);
    --color-chart-3: var(--chart-3);
    --color-chart-2: var(--chart-2);
    --color-chart-1: var(--chart-1);
    --color-ring: var(--ring);
    --color-input: var(--input);
    --color-border: var(--border);
    --color-destructive: var(--destructive);
    --color-accent-foreground: var(--accent-foreground);
    --color-accent: var(--accent);
    --color-muted-foreground: var(--muted-foreground);
    --color-muted: var(--muted);
    --color-secondary-foreground: var(--secondary-foreground);
    --color-secondary: var(--secondary);
    --color-primary-foreground: var(--primary-foreground);
    --color-primary: var(--primary);
    --color-popover-foreground: var(--popover-foreground);
    --color-popover: var(--popover);
    --color-card-foreground: var(--card-foreground);
    --color-card: var(--card);
    --radius-sm: calc(var(--radius) - 4px);
    --radius-md: calc(var(--radius) - 2px);
    --radius-lg: var(--radius);
    --radius-xl: calc(var(--radius) + 4px);
    --animate-accordion-down: accordion-down 0.2s ease-out;
    --animate-accordion-up: accordion-up 0.2s ease-out;

    @keyframes accordion-down {
        from {
            height: 0;
        }
        to {
            height: var(--radix-accordion-content-height);
        }
    }

    @keyframes accordion-up {
        from {
            height: var(--radix-accordion-content-height);
        }
        to {
            height: 0;
        }
    }
}

:root {
    --radius: 0.625rem;
    --background: oklch(1 0 0);
    --foreground: oklch(0.141 0.005 285.823);
    --card: oklch(1 0 0);
    --card-foreground: oklch(0.141 0.005 285.823);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(0.141 0.005 285.823);
    --primary: oklch(0.21 0.006 285.885);
    --primary-foreground: oklch(0.985 0 0);
    --secondary: oklch(0.967 0.001 286.375);
    --secondary-foreground: oklch(0.21 0.006 285.885);
    --muted: oklch(0.967 0.001 286.375);
    --muted-foreground: oklch(0.552 0.016 285.938);
    --accent: oklch(0.967 0.001 286.375);
    --accent-foreground: oklch(0.21 0.006 285.885);
    --destructive: oklch(0.577 0.245 27.325);
    --border: oklch(0.92 0.004 286.32);
    --input: oklch(0.92 0.004 286.32);
    --ring: oklch(0.705 0.015 286.067);
    --chart-1: oklch(0.646 0.222 41.116);
    --chart-2: oklch(0.6 0.118 184.704);
    --chart-3: oklch(0.398 0.07 227.392);
    --chart-4: oklch(0.828 0.189 84.429);
    --chart-5: oklch(0.769 0.188 70.08);
    --sidebar: oklch(0.985 0 0);
    --sidebar-foreground: oklch(0.141 0.005 285.823);
    --sidebar-primary: oklch(0.21 0.006 285.885);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.967 0.001 286.375);
    --sidebar-accent-foreground: oklch(0.21 0.006 285.885);
    --sidebar-border: oklch(0.92 0.004 286.32);
    --sidebar-ring: oklch(0.705 0.015 286.067);
}

.dark {
    --background: oklch(0.141 0.005 285.823);
    --foreground: oklch(0.985 0 0);
    --card: oklch(0.21 0.006 285.885);
    --card-foreground: oklch(0.985 0 0);
    --popover: oklch(0.21 0.006 285.885);
    --popover-foreground: oklch(0.985 0 0);
    --primary: oklch(0.92 0.004 286.32);
    --primary-foreground: oklch(0.21 0.006 285.885);
    --secondary: oklch(0.274 0.006 286.033);
    --secondary-foreground: oklch(0.985 0 0);
    --muted: oklch(0.274 0.006 286.033);
    --muted-foreground: oklch(0.705 0.015 286.067);
    --accent: oklch(0.274 0.006 286.033);
    --accent-foreground: oklch(0.985 0 0);
    --destructive: oklch(0.704 0.191 22.216);
    --border: oklch(1 0 0 / 10%);
    --input: oklch(1 0 0 / 15%);
    --ring: oklch(0.552 0.016 285.938);
    --chart-1: oklch(0.488 0.243 264.376);
    --chart-2: oklch(0.696 0.17 162.48);
    --chart-3: oklch(0.769 0.188 70.08);
    --chart-4: oklch(0.627 0.265 303.9);
    --chart-5: oklch(0.645 0.246 16.439);
    --sidebar: oklch(0.21 0.006 285.885);
    --sidebar-foreground: oklch(0.985 0 0);
    --sidebar-primary: oklch(0.488 0.243 264.376);
    --sidebar-primary-foreground: oklch(0.985 0 0);
    --sidebar-accent: oklch(0.274 0.006 286.033);
    --sidebar-accent-foreground: oklch(0.985 0 0);
    --sidebar-border: oklch(1 0 0 / 10%);
    --sidebar-ring: oklch(0.552 0.016 285.938);
}

@layer base {
    * {
        @apply border-border outline-ring/50;
    }

    body {
        @apply bg-background text-foreground;
    }
}

:root {
    --markdown-font-size: 1rem; /* 16px as a fallback default */
    --font-size-base: 1rem;
}

.markdown {
    max-width: none;
    font-size: var(--markdown-font-size, var(--font-size-base));
    line-height: calc(
            28px * var(--markdown-font-size, var(--font-size-base)) / var(--font-size-base)
    );
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    font-size: var(--markdown-font-size, var(--font-size-base));
    line-height: calc(
            28px * var(--markdown-font-size, var(--font-size-base)) / var(--font-size-base)
    );
}

.markdown h1 {
    font-size: calc(var(--markdown-font-size) * 1.75);
}

.markdown h2 {
    font-size: calc(var(--markdown-font-size) * 1.5);
}

.markdown h2 {
    margin-bottom: 1rem;
    margin-top: 2rem;
}

.markdown h3 {
    font-weight: 600;
    font-size: calc(var(--markdown-font-size) * 1.25);
}

.markdown h3,
.markdown h4 {
    margin-bottom: 0.5rem;
    margin-top: 1rem;
}

.markdown h4 {
    font-weight: 400;
    font-size: calc(var(--markdown-font-size) * 1.1);
}

.markdown h5 {
    font-weight: 600;
    font-size: var(--markdown-font-size);
}

.markdown blockquote {
    --tw-border-opacity: 1;
    border-color: rgba(142, 142, 160, var(--tw-border-opacity));
    border-left-width: 2px;
    line-height: 1rem;
    padding-left: 1rem;
}

.markdown table {
    --tw-border-spacing-x: 0px;
    --tw-border-spacing-y: 0px;
    border-collapse: separate;
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
    width: 100%;
}

.markdown th {
    background-color: rgba(236, 236, 241, 0.2);
    border-bottom-width: 1px;
    border-left-width: 1px;
    border-top-width: 1px;
    padding: 0.25rem 0.75rem;
}

.markdown th:first-child {
    border-top-left-radius: 0.375rem;
}

.markdown th:last-child {
    border-right-width: 1px;
    border-top-right-radius: 0.375rem;
}

.markdown td {
    border-bottom-width: 1px;
    border-left-width: 1px;
    padding: 0.25rem 0.75rem;
}

.markdown td:last-child {
    border-right-width: 1px;
}

.markdown tbody tr:last-child td:first-child {
    border-bottom-left-radius: 0.375rem;
}

.markdown tbody tr:last-child td:last-child {
    border-bottom-right-radius: 0.375rem;
}

.markdown a {
    text-decoration-line: underline;
    text-underline-offset: 2px;
}


.prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    font-size: var(--markdown-font-size, var(--font-size-base));
    line-height: calc(
            28px * var(--markdown-font-size, var(--font-size-base)) / var(--font-size-base)
    );
}

.prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-bottom: 1.2em;
    margin-top: 1.2em;
}

.prose :where(a):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
}

.prose :where(strong):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
}

.prose :where(a strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(blockquote strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(thead th strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
    color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-bottom: 3em;
    margin-top: 3em;
}

.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
    border-left-color: var(--tw-prose-quote-borders);
    border-left-width: 0.25rem;
    color: var(--tw-prose-quotes);
    font-style: italic;
    font-style: normal;
    font-weight: 500;
    margin-bottom: 1.6em;
    margin-top: 1.6em;
    padding-left: 1em;
    quotes: '\201C' '\201D' '\2018' '\2019';
}

.prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *)):before {
    content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *)):after {
    content: close-quote;
}

.prose :where(h1):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.1111111;
    margin-bottom: 0.8888889em;
    margin-top: 0;
}

.prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-weight: 900;
}

.prose :where(h2):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.3333333;
    margin-bottom: 1em;
    margin-top: 2em;
}

.prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-weight: 800;
}

.prose :where(h3):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
    margin-bottom: 0.6em;
    margin-top: 1.6em;
}

.prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-weight: 700;
}

.prose :where(h4):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    line-height: 1.5;
    margin-bottom: 0.5em;
    margin-top: 1.5em;
}

.prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-weight: 700;
}

.prose :where(img):not(:where([class~='not-prose'] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
}

.prose :where(figure > *):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
    margin-top: 0;
}

.prose :where(figcaption):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
}

.prose :where(code):not(:where([class~='not-prose'] *)):before {
    content: '`';
}

.prose :where(code):not(:where([class~='not-prose'] *)):after {
    content: '`';
}

.prose :where(a code):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(h1 code):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(h2 code):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(blockquote code):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(thead th code):not(:where([class~='not-prose'] *)) {
    color: inherit;
}

.prose :where(pre):not(:where([class~='not-prose'] *)) {
    background-color: transparent;
    border-radius: 0.375rem;
    color: currentColor;
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.7142857;
    margin: 0;
    overflow-x: auto;
    padding: 0;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)) {
    background-color: transparent;
    border-radius: 0;
    border-width: 0;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    padding: 0;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):before {
    content: none;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)):after {
    content: none;
}

.prose :where(table):not(:where([class~='not-prose'] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-bottom: 2em;
    margin-top: 2em;
    table-layout: auto;
    text-align: left;
    width: 100%;
}

.prose :where(thead):not(:where([class~='not-prose'] *)) {
    border-bottom-color: var(--tw-prose-th-borders);
    border-bottom-width: 1px;
}

.prose :where(thead th):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
    padding-right: 0.5714286em;
    vertical-align: bottom;
}

.prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
    border-bottom-color: var(--tw-prose-td-borders);
    border-bottom-width: 1px;
}

.prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
    border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~='not-prose'] *)) {
    vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~='not-prose'] *)) {
    border-top-color: var(--tw-prose-th-borders);
    border-top-width: 1px;
}

.prose :where(tfoot td):not(:where([class~='not-prose'] *)) {
    vertical-align: top;
}

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
}

.prose :where(p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
    margin-top: 1.25em;
}

.prose :where(video):not(:where([class~='not-prose'] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
}

.prose :where(figure):not(:where([class~='not-prose'] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
}

.prose :where(li):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *)) {
    padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.75em;
    margin-top: 0.75em;
}

.prose :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
}

.prose :where(hr + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
    padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
    padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~='not-prose'] *)) {
    padding: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~='not-prose'] *)) {
    padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~='not-prose'] *)) {
    padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

.prose-sm :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.5714286em;
    margin-top: 0.5714286em;
}

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.1428571em;
}

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.1428571em;
}

.prose-sm :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-sm :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

.prose-base :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.75em;
    margin-top: 0.75em;
}

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
}

.prose-base :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-base :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

.prose-lg :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.8888889em;
    margin-top: 0.8888889em;
}

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.3333333em;
}

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.3333333em;
}

.prose-lg :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-lg :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

.prose-xl :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.8em;
    margin-top: 0.8em;
}

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.2em;
}

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.2em;
}

.prose-xl :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-xl :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

.prose-2xl :where(.prose > ul > li p):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.8333333em;
    margin-top: 0.8333333em;
}

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.3333333em;
}

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.3333333em;
}

.prose-2xl :where(.prose > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-2xl :where(.prose > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
}

code,
pre {
    font-family: Consolas,
    Söhne Mono,
    Monaco,
    Andale Mono,
    Ubuntu Mono,
    monospace !important;
}

code[class='language-plaintext'] {
    white-space: pre-line;
}

code.hljs,
code[class*='language-'],
pre[class*='language-'] {
    word-wrap: normal;
    background: none;
    color: #fff;
    -webkit-hyphens: none;
    hyphens: none;
    font-size: 0.85rem;
    line-height: 1.5;
    tab-size: 4;
    text-align: left;
    white-space: pre;
    word-break: normal;
    word-spacing: normal;
}

pre[class*='language-'] {
    border-radius: 0.3em;
    overflow: auto;
}

:not(pre) > code.hljs,
:not(pre) > code[class*='language-'] {
    border-radius: 0.3em;
    padding: 0.1em;
    white-space: normal;
}

.hljs-comment {
    color: hsla(0, 0%, 100%, 0.5);
}

.hljs-meta {
    color: hsla(0, 0%, 100%, 0.6);
}

.hljs-built_in,
.hljs-class .hljs-title {
    color: #e9950c;
}

.hljs-doctag,
.hljs-formula,
.hljs-keyword,
.hljs-literal {
    color: #2e95d3;
}

.hljs-addition,
.hljs-attribute,
.hljs-meta-string,
.hljs-regexp,
.hljs-string {
    color: #00a67d;
}

.hljs-attr,
.hljs-number,
.hljs-selector-attr,
.hljs-selector-class,
.hljs-selector-pseudo,
.hljs-template-variable,
.hljs-type,
.hljs-variable {
    color: #df3079;
}

.hljs-bullet,
.hljs-link,
.hljs-selector-id,
.hljs-symbol,
.hljs-title {
    color: #f22c3d;
}


/* Ordered Listing */
.prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-alpha;
}

.prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-alpha;
}

.prose :where(ol[type='A s']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-alpha;
}

.prose :where(ol[type='a s']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-alpha;
}

.prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-roman;
}

.prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-roman;
}

.prose :where(ol[type='I s']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-roman;
}

.prose :where(ol[type='i s']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-roman;
}

.prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
    list-style-type: decimal;
}

.prose :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0.75em;
    margin-top: 0.75em;
}

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.1428571em;
}

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.1428571em;
}

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
}

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
}

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.3333333em;
}

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.3333333em;
}

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.2em;
}

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.2em;
}

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.3333333em;
}

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.3333333em;
}

/* Base styles for lists */
.prose ol,
.prose ul,
.markdown ol,
.markdown ul {
    list-style-position: outside;
    margin-top: 1em;
    margin-bottom: 1em;
    padding-left: 1em;
}

.prose li,
.markdown li {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}

/* Ordered lists */
.prose ol,
.markdown ol {
    list-style-type: decimal;
}

.prose ol > li,
.markdown ol > li {
    position: relative;
    padding-left: 0.375em;
}

.prose ol > li::marker,
.markdown ol > li::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
}

/* Nested ordered lists */
.prose ol ol,
.markdown ol ol {
    list-style-type: lower-alpha;
}

.prose ol ol ol,
.markdown ol ol ol {
    list-style-type: lower-roman;
}

/* Unordered lists */
.prose ul,
.markdown ul {
    list-style-type: disc;
}

.prose ul > li,
.markdown ul > li {
    padding-left: 0.375em;
}

.prose ul > li::marker,
.markdown ul > li::marker {
    color: var(--tw-prose-bullets);
}

/* Nested unordered lists */
.prose ul ul,
.markdown ul ul {
    list-style-type: circle;
}

.prose ul ul ul,
.markdown ul ul ul {
    list-style-type: square;
}

/* Nested lists */
.prose ol ol,
.prose ul ul,
.prose ul ol,
.prose ol ul,
.markdown ol ol,
.markdown ul ul,
.markdown ul ol,
.markdown ol ul {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
}

.prose > ul > li > *:last-child,
.prose > ol > li > *:last-child,
.markdown > ul > li > *:last-child,
.markdown > ol > li > *:last-child {
    margin-bottom: 1.25em;
}

/* Ensure proper marker color */
.prose li::marker,
.markdown li::marker {
    color: currentColor;
}

